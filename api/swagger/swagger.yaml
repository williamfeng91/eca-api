swagger: "2.0"

################################################################################
#                              API Information                                 #
################################################################################
info:
  version: "0.0.1"
  title: Education Consultant Assistant API

################################################################################
#                  Host, Base Path, Schemes and Content Types                  #
################################################################################
host: localhost:10010
# basePath prefixes all resource paths
basePath: /api/v0/
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json

################################################################################
#                                   Tags                                       #
################################################################################
tags:
  - name: Workflow Status
  - name: Customer
  - name: Checklist
  - name: Sticky Note

################################################################################
#                                  Security                                    #
################################################################################

################################################################################
#                                   Parameters                                 #
################################################################################
parameters:
  workflowStatusId:
    name: workflowStatusId
    in: path
    description: The _id of a workflow status
    type: string
    required: true
  customerId:
    name: customerId
    in: path
    description: The _id of a customer
    type: string
    required: true
  checklistId:
    name: checklistId
    in: path
    description: The _id of a checklist
    type: string
    required: true
  checklistItemId:
    name: checklistItemId
    in: path
    description: The _id of a checklist item
    type: string
    required: true
  stickyNoteId:
    name: stickyNoteId
    in: path
    description: The _id of a sticky note
    type: string
    required: true

################################################################################
#                                           Paths                              #
################################################################################
paths:
  ##### Workflow Status #####
  /workflow-statuses:
    post:
      tags:
        - Workflow Status
      description: ""
      summary: Creates a new workflow status type
      parameters:
        - name: name
          in: body
          description: The NewWorkflowStatus object
          required: true
          schema:
            $ref: "#/definitions/NewWorkflowStatus"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/WorkflowStatus"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /workflow-statuses/{workflowStatusId}:
    parameters:
      - $ref: '#/parameters/workflowStatusId'
    get:
      tags:
        - Workflow Status
      description: ""
      summary: Returns a workflow status type
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/WorkflowStatus"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - Workflow Status
      description: ""
      summary: Updates a workflow status type
      parameters:
        - name: name
          in: body
          description: The WorkflowStatus object
          required: true
          schema:
            $ref: "#/definitions/WorkflowStatus"
      responses:
        204:
          description: No content
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Workflow Status
      description: ""
      summary: Deletes a workflow status type
      responses:
        204:
          description: No content
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"

  ##### Customer #####
  /customers:
    post:
      tags:
        - Customer
      description: ""
      summary: Creates a new customer
      parameters:
        - name: name
          in: body
          description: The NewCustomer object
          required: true
          schema:
            $ref: "#/definitions/NewCustomer"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/Customer"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /customers/{customerId}:
    x-swagger-router-controller: customers
    parameters:
      - $ref: '#/parameters/customerId'
    get:
      operationId: getCustomerById
      tags:
        - Customer
      description: ""
      summary: Returns a customer
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Customer"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - Customer
      description: ""
      summary: Updates a customer
      parameters:
        - name: name
          in: body
          description: The Customer object
          required: true
          schema:
            $ref: "#/definitions/Customer"
      responses:
        204:
          description: No content
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Customer
      description: ""
      summary: Deletes a customer
      responses:
        204:
          description: No content
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /customers/{customerId}/archived:
    parameters:
      - $ref: '#/parameters/customerId'
    put:
      tags:
        - Customer
      description: ""
      summary: Updates the archived status of a customer
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: value
          in: formData
          description: Set to true to archive / to false to unarchive
          required: true
          type: boolean
      responses:
        204:
          description: No content
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /customers/{customerId}/birthday:
    parameters:
      - $ref: '#/parameters/customerId'
    put:
      tags:
        - Customer
      description: ""
      summary: Updates the birthday of a customer
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: value
          in: formData
          description: The birthday of a customer in milliseconds since epoch
          required: true
          type: string
          format: date-time
      responses:
        204:
          description: No content
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /customers/{customerId}/visa_expiry_date:
    parameters:
      - $ref: '#/parameters/customerId'
    put:
      tags:
        - Customer
      description: ""
      summary: Updates the visa expiry date-time of a customer
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: value
          in: formData
          description: The visa expiry date-time of a customer in milliseconds since epoch
          required: true
          type: string
          format: date-time
      responses:
        204:
          description: No content
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /customers/{customerId}/{property}:
    parameters:
      - $ref: '#/parameters/customerId'
    put:
      tags:
        - Customer
      description: ""
      summary: Updates a customer property
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: property
          in: path
          description: The property name
          required: true
          type: string
          enum:
            - email
            - surname
            - given_name
            - nickname
            - real_name
            - gender
            - mobile
            - qq
            - wechat
            - au_address
            - foreign_address
        - name: value
          in: formData
          description: The property value
          required: true
          type: string
      responses:
        204:
          description: No content
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"

  ##### Checklist #####
  /customers/{customerId}/checklists:
    parameters:
      - $ref: '#/parameters/customerId'
    post:
      tags:
        - Checklist
      description: ""
      summary: Creates a new checklist for a customer
      parameters:
        - name: name
          in: body
          description: The NewChecklist object
          required: true
          schema:
            $ref: "#/definitions/NewChecklist"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/Checklist"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
        - Checklist
      description: ""
      summary: Returns all checklists for a customer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Checklist"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /checklists/{checklistId}:
    parameters:
      - $ref: '#/parameters/checklistId'
    get:
      tags:
        - Checklist
      description: ""
      summary: Returns a checklist
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Checklist"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - Checklist
      description: ""
      summary: Updates a checklist
      parameters:
        - name: name
          in: body
          description: The Checklist object
          required: true
          schema:
            $ref: "#/definitions/Checklist"
      responses:
        204:
          description: No content
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Checklist
      description: ""
      summary: Deletes a checklist
      responses:
        204:
          description: No content
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /checklists/{checklistId}/{property}:
    parameters:
      - $ref: '#/parameters/checklistId'
    put:
      tags:
        - Checklist
      description: ""
      summary: Updates a checklist property
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: property
          in: path
          description: The property name
          required: true
          type: string
          enum:
            - name
        - name: value
          in: formData
          description: The property value
          required: true
          type: string
      responses:
        204:
          description: No content
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /checklists/{checklistId}/checklist-items:
    parameters:
      - $ref: '#/parameters/checklistId'
    post:
      tags:
        - Checklist
      description: ""
      summary: Creates a new checklist item in a checklist
      parameters:
        - name: name
          in: body
          description: The NewChecklistItem object
          required: true
          schema:
            $ref: "#/definitions/NewChecklistItem"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/ChecklistItem"
        400:
          description: Bad request
        500:
          description: Internal server error
    get:
      tags:
        - Checklist
      description: ""
      summary: Returns all checklist items in a checklist
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ChecklistItem"
        404:
          description: Not found
        500:
          description: Internal server error
  /checklist-items/{checklistItemId}:
    parameters:
      - $ref: '#/parameters/checklistItemId'
    get:
      tags:
        - Checklist
      description: ""
      summary: Returns a checklist item
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/ChecklistItem"
        404:
          description: Not found
        500:
          description: Internal server error
    put:
      tags:
        - Checklist
      description: ""
      summary: Updates a checklist item
      parameters:
        - name: name
          in: body
          description: The ChecklistItem object
          required: true
          schema:
            $ref: "#/definitions/ChecklistItem"
      responses:
        204:
          description: No content
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Internal server error
    delete:
      tags:
        - Checklist
      description: ""
      summary: Deletes a checklist item
      responses:
        204:
          description: No content
        404:
          description: Not found
        500:
          description: Internal server error
  /checklist-items/{checklistItemId}/checked:
    parameters:
      - $ref: '#/parameters/checklistItemId'
    put:
      tags:
        - Checklist
      description: ""
      summary: Updates the checked status of a checklist item
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: value
          in: formData
          description: Set to true to check / to false to uncheck
          required: true
          type: boolean
      responses:
        204:
          description: No content
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Internal server error
  /checklist-items/{checklistItemId}/{property}:
    parameters:
      - $ref: '#/parameters/checklistItemId'
    put:
      tags:
        - Checklist
      description: ""
      summary: Updates a checklist item property
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: property
          in: path
          description: The property name
          required: true
          type: string
          enum:
            - text
        - name: value
          in: formData
          description: The property value
          required: true
          type: string
      responses:
        204:
          description: No content
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Internal server error

  ##### Sticky Note #####
  /customers/{customerId}/sticky-notes:
    parameters:
      - $ref: '#/parameters/customerId'
    post:
      tags:
        - Sticky Note
      description: ""
      summary: Creates a new sticky note for a customer
      parameters:
        - name: name
          in: body
          description: The NewStickyNote object
          required: true
          schema:
            $ref: "#/definitions/NewStickyNote"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/StickyNote"
        400:
          description: Bad request
        500:
          description: Internal server error
    get:
      tags:
        - Sticky Note
      description: ""
      summary: Returns all sticky notes for a customer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/StickyNote"
        404:
          description: Not found
        500:
          description: Internal server error
  /sticky-notes/{stickyNoteId}:
    parameters:
      - $ref: '#/parameters/stickyNoteId'
    get:
      tags:
        - Sticky Note
      description: ""
      summary: Returns a sticky note
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/StickyNote"
        404:
          description: Not found
        500:
          description: Internal server error
    put:
      tags:
        - Sticky Note
      description: ""
      summary: Updates a sticky note
      parameters:
        - name: name
          in: body
          description: The StickyNote object
          required: true
          schema:
            $ref: "#/definitions/StickyNote"
      responses:
        204:
          description: No content
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Internal server error
    delete:
      tags:
        - Sticky Note
      description: ""
      summary: Deletes a sticky note
      responses:
        204:
          description: No content
        404:
          description: Not found
        500:
          description: Internal server error
  /sticky-notes/{stickyNoteId}/{property}:
    parameters:
      - $ref: '#/parameters/stickyNoteId'
    put:
      tags:
        - Sticky Note
      description: ""
      summary: Updates a sticky note property
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: property
          in: path
          description: The property name
          required: true
          type: string
          enum:
            - name
        - name: value
          in: formData
          description: The property value
          required: true
          type: string
      responses:
        204:
          description: No content
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Internal server error

  /swagger:
    x-swagger-pipe: swagger_raw

################################################################################
#                                 Definitions                                  #
################################################################################
definitions:
  Customer:
    type: object
    allOf:
      - $ref: "#/definitions/NewCustomer"
      - required:
        - _id
        - status
        - list_pos
        - workflow_pos
        - is_archived
        - created_at
        properties:
          _id:
            $ref: "#/definitions/ObjectId"
          status:
            $ref: "#/definitions/WorkflowStatus"
          list_pos:
            $ref: "#/definitions/SortablePosition"
          workflow_pos:
            $ref: "#/definitions/SortablePosition"
          is_archived:
            type: boolean
            default: false
          checklists:
            type: array
            items:
              $ref: "#/definitions/Checklist"
          sticky_notes:
            type: array
            items:
              $ref: "#/definitions/StickyNote"
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
  NewCustomer:
    type: object
    required:
      - surname
      - given_name
      - gender
    properties:
      email:
        type: string
        format: email
      surname:
        type: string
      given_name:
        type: string
      nickname:
        type: string
      real_name:
        type: string
      gender:
        type: string
        enum:
          - male
          - female
      birthday:
        type: string
        format: date-time
      mobile:
        type: string
      qq:
        type: string
      wechat:
        type: string
      au_address:
        type: string
      foreign_address:
        type: string
      visa_expiry_date:
        type: string
        format: date-time
  WorkflowStatus:
    type: object
    allOf:
      - $ref: "#/definitions/NewWorkflowStatus"
      - required:
        - _id
        properties:
          _id:
            $ref: "#/definitions/ObjectId"
  NewWorkflowStatus:
    type: object
    required:
      - name
      - color
    properties:
      name:
        type: string
      color:
        type: string
        enum:
          - red
          - orange
          - yellow
          - green
          - blue
          - purple
          - black
  Checklist:
    type: object
    allOf:
      - $ref: "#/definitions/NewChecklist"
      - required:
        - _id
        - pos
        - items
        properties:
          _id:
            $ref: "#/definitions/ObjectId"
          pos:
            $ref: "#/definitions/SortablePosition"
          items:
            type: array
            items:
              $ref: "#/definitions/ChecklistItem"
  NewChecklist:
    type: object
    required:
      - name
    properties:
      name:
        type: string
  ChecklistItem:
    type: object
    allOf:
      - $ref: "#/definitions/NewChecklistItem"
      - required:
        - _id
        - checked
        - pos
        properties:
          _id:
            $ref: "#/definitions/ObjectId"
          checked:
            type: boolean
            default: false
          pos:
            $ref: "#/definitions/SortablePosition"
  NewChecklistItem:
    type: object
    required:
      - text
    properties:
      text:
        type: string
  StickyNote:
    type: object
    allOf:
      - $ref: "#/definitions/NewStickyNote"
      - required:
        - _id
        - pos
        properties:
          _id:
            $ref: "#/definitions/ObjectId"
          pos:
            $ref: "#/definitions/SortablePosition"
  NewStickyNote:
    type: object
    required:
      - text
    properties:
      text:
        type: string

  # Internal types
  ObjectId:
    type: string
    pattern: ^[0-9a-fA-F]{24}$
  SortablePosition:
    type: integer
    format: int32
    minimum: 0

  # responses
  ErrorResponse:
    type: object
    required:
      - statusCode
      - error
      - message
    properties:
      statusCode:
        type: integer
      error:
        type: string
      message:
        type: string