swagger: "2.0"

################################################################################
#                              API Information                                 #
################################################################################
info:
  version: "0.0.1"
  title: Education Consultant Assistant API

################################################################################
#                  Host, Base Path, Schemes and Content Types                  #
################################################################################
host: localhost:10010
# basePath prefixes all resource paths
basePath: /api/v0/
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json

################################################################################
#                                   Tags                                       #
################################################################################
tags:
  - name: Workflow Status
  - name: Customer
  - name: Checklist
  - name: Sticky Note

################################################################################
#                                  Security                                    #
################################################################################

################################################################################
#                                   Parameters                                 #
################################################################################
parameters:
  workflowStatusId:
    name: workflowStatusId
    in: path
    description: The id of a workflow status
    type: string
    required: true
  customerId:
    name: customerId
    in: path
    description: The id of a customer
    type: string
    required: true
  checklistId:
    name: checklistId
    in: path
    description: The id of a checklist
    type: string
    required: true
  checklistItemId:
    name: checklistItemId
    in: path
    description: The id of a checklist item
    type: string
    required: true
  stickyNoteId:
    name: stickyNoteId
    in: path
    description: The _id of a sticky note
    type: string
    required: true

################################################################################
#                                           Paths                              #
################################################################################
paths:
  ##### Workflow Status #####
  /workflow-statuses:
    x-swagger-router-controller: workflowStatuses
    post:
      operationId: createWorkflowStatus
      tags:
        - Workflow Status
      description: ""
      summary: Creates a new workflow status type
      parameters:
        - name: newWorkflowStatus
          in: body
          description: The NewWorkflowStatus object
          required: true
          schema:
            $ref: "#/definitions/NewWorkflowStatus"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/ExpandedWorkflowStatus"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: Conflict
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      operationId: getWorkflowStatuses
      tags:
        - Workflow Status
      description: ""
      summary: Returns a list of workflow statuses
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ExpandedWorkflowStatus"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /workflow-statuses/{workflowStatusId}:
    x-swagger-router-controller: workflowStatuses
    parameters:
      - $ref: '#/parameters/workflowStatusId'
    get:
      operationId: getWorkflowStatusById
      tags:
        - Workflow Status
      description: ""
      summary: Returns a workflow status type
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ExpandedWorkflowStatus"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: updateWorkflowStatus
      tags:
        - Workflow Status
      description: ""
      summary: Updates a workflow status type
      parameters:
        - name: name
          in: body
          description: The WorkflowStatus object
          required: true
          schema:
            $ref: "#/definitions/WorkflowStatus"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ExpandedWorkflowStatus"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: Conflict
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      operationId: partialUpdateWorkflowStatus
      tags:
        - Workflow Status
      description: ""
      summary: Partially update a workflow status
      consumes:
        - application/merge-patch+json
      parameters:
        - name: workflowStatusUpdatePatch
          in: body
          description: The WorkflowStatusUpdatePatch object
          required: true
          schema:
            $ref: "#/definitions/WorkflowStatusUpdatePatch"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ExpandedWorkflowStatus"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: Conflict
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: deleteWorkflowStatus
      tags:
        - Workflow Status
      description: ""
      summary: Deletes a workflow status type
      responses:
        204:
          description: No content
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"

  ##### Customer #####
  /customers:
    x-swagger-router-controller: customers
    post:
      operationId: createCustomer
      tags:
        - Customer
      description: ""
      summary: Creates a new customer
      parameters:
        - name: newCustomer
          in: body
          description: The NewCustomer object
          required: true
          schema:
            $ref: "#/definitions/NewCustomer"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/ExpandedCustomer"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: Conflict
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      operationId: getCustomers
      tags:
        - Customer
      description: ""
      summary: Returns a list of customers
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ExpandedCustomer"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /customers/{customerId}:
    x-swagger-router-controller: customers
    parameters:
      - $ref: '#/parameters/customerId'
    get:
      operationId: getCustomerById
      tags:
        - Customer
      description: ""
      summary: Returns a customer
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ExpandedCustomer"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: updateCustomer
      tags:
        - Customer
      description: ""
      summary: Updates a customer
      parameters:
        - name: updatedCustomer
          in: body
          description: The Customer object
          required: true
          schema:
            $ref: "#/definitions/Customer"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ExpandedCustomer"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: Conflict
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      operationId: partialUpdateCustomer
      tags:
        - Customer
      description: ""
      summary: Partially update a customer
      consumes:
        - application/merge-patch+json
      parameters:
        - name: customerUpdatePatch
          in: body
          description: The CustomerUpdatePatch object
          required: true
          schema:
            $ref: "#/definitions/CustomerUpdatePatch"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ExpandedCustomer"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: Conflict
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: deleteCustomer
      tags:
        - Customer
      description: ""
      summary: Deletes a customer
      responses:
        204:
          description: No content
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  # /customers/{customerId}/archived:
  #   x-swagger-router-controller: customers
  #   parameters:
  #     - $ref: '#/parameters/customerId'
  #   put:
  #     operationId: updateCustomerArchived
  #     tags:
  #       - Customer
  #     description: ""
  #     summary: Updates the archived status of a customer
  #     parameters:
  #       - name: value
  #         in: query
  #         description: Set to true to archive / to false to unarchive
  #         required: true
  #         type: boolean
  #     responses:
  #       200:
  #         description: OK
  #       400:
  #         description: Bad request
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"
  #       404:
  #         description: Not found
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"
  #       500:
  #         description: Internal server error
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"
  # /customers/{customerId}/birthday:
  #   x-swagger-router-controller: customers
  #   parameters:
  #     - $ref: '#/parameters/customerId'
  #   put:
  #     operationId: updateCustomerBirthday
  #     tags:
  #       - Customer
  #     description: ""
  #     summary: Updates the birthday of a customer
  #     parameters:
  #       - name: value
  #         in: query
  #         description: The birthday of a customer
  #         required: true
  #         type: string
  #         format: date-time
  #     responses:
  #       204:
  #         description: No content
  #       400:
  #         description: Bad request
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"
  #       404:
  #         description: Not found
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"
  #       500:
  #         description: Internal server error
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"
  # /customers/{customerId}/visa_expiry_date:
  #   x-swagger-router-controller: customers
  #   parameters:
  #     - $ref: '#/parameters/customerId'
  #   put:
  #     operationId: updateCustomerVisaExpiryDate
  #     tags:
  #       - Customer
  #     description: ""
  #     summary: Updates the visa expiry date of a customer
  #     parameters:
  #       - name: value
  #         in: query
  #         description: The visa expiry date of a customer
  #         required: true
  #         type: string
  #         format: date-time
  #     responses:
  #       200:
  #         description: OK
  #       400:
  #         description: Bad request
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"
  #       404:
  #         description: Not found
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"
  #       500:
  #         description: Internal server error
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"
  # /customers/{customerId}/{property}:
  #   x-swagger-router-controller: customers
  #   parameters:
  #     - $ref: '#/parameters/customerId'
  #   put:
  #     operationId: updateCustomerProperty
  #     tags:
  #       - Customer
  #     description: ""
  #     summary: Updates a customer property
  #     parameters:
  #       - name: property
  #         in: path
  #         description: The property name
  #         required: true
  #         type: string
  #         enum:
  #           - email
  #           - surname
  #           - given_name
  #           - nickname
  #           - real_name
  #           - gender
  #           - mobile
  #           - qq
  #           - wechat
  #           - au_address
  #           - foreign_address
  #       - name: value
  #         in: query
  #         description: The property value
  #         required: true
  #         type: string
  #     responses:
  #       200:
  #         description: OK
  #       400:
  #         description: Bad request
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"
  #       404:
  #         description: Not found
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"
  #       500:
  #         description: Internal server error
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"

  ##### Checklist #####
  /customers/{customerId}/checklists:
    parameters:
      - $ref: '#/parameters/customerId'
    post:
      tags:
        - Checklist
      description: ""
      summary: Creates a new checklist for a customer
      parameters:
        - name: name
          in: body
          description: The NewChecklist object
          required: true
          schema:
            $ref: "#/definitions/NewChecklist"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/ExpandedChecklist"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: Conflict
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
        - Checklist
      description: ""
      summary: Returns a list of checklists for a customer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ExpandedChecklist"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /checklists/{checklistId}:
    parameters:
      - $ref: '#/parameters/checklistId'
    get:
      tags:
        - Checklist
      description: ""
      summary: Returns a checklist
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ExpandedChecklist"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - Checklist
      description: ""
      summary: Updates a checklist
      parameters:
        - name: name
          in: body
          description: The Checklist object
          required: true
          schema:
            $ref: "#/definitions/Checklist"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ExpandedChecklist"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: Conflict
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      operationId: partialUpdateChecklist
      tags:
        - Checklist
      description: ""
      summary: Partially update a checklist
      consumes:
        - application/merge-patch+json
      parameters:
        - name: checklistUpdatePatch
          in: body
          description: The ChecklistUpdatePatch object
          required: true
          schema:
            $ref: "#/definitions/ChecklistUpdatePatch"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ExpandedChecklist"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: Conflict
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Checklist
      description: ""
      summary: Deletes a checklist
      responses:
        204:
          description: No content
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /checklists/{checklistId}/checklist-items:
    parameters:
      - $ref: '#/parameters/checklistId'
    post:
      tags:
        - Checklist
      description: ""
      summary: Creates a new checklist item in a checklist
      parameters:
        - name: name
          in: body
          description: The NewChecklistItem object
          required: true
          schema:
            $ref: "#/definitions/NewChecklistItem"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/ExpandedChecklistItem"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: Conflict
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
        - Checklist
      description: ""
      summary: Returns a list of checklist items in a checklist
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ExpandedChecklistItem"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /checklist-items/{checklistItemId}:
    parameters:
      - $ref: '#/parameters/checklistItemId'
    get:
      tags:
        - Checklist
      description: ""
      summary: Returns a checklist item
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ExpandedChecklistItem"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - Checklist
      description: ""
      summary: Updates a checklist item
      parameters:
        - name: name
          in: body
          description: The ChecklistItem object
          required: true
          schema:
            $ref: "#/definitions/ChecklistItem"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ExpandedChecklistItem"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: Conflict
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      operationId: partialUpdateChecklistItem
      tags:
        - Checklist
      description: ""
      summary: Partially update a checklist item
      consumes:
        - application/merge-patch+json
      parameters:
        - name: checklistItemUpdatePatch
          in: body
          description: The ChecklistItemUpdatePatch object
          required: true
          schema:
            $ref: "#/definitions/ChecklistItemUpdatePatch"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ExpandedChecklistItem"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: Conflict
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Checklist
      description: ""
      summary: Deletes a checklist item
      responses:
        204:
          description: No content
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"

  ##### Sticky Note #####
  /customers/{customerId}/sticky-notes:
    x-swagger-router-controller: stickyNotes
    parameters:
      - $ref: '#/parameters/customerId'
    post:
      operationId: createStickyNote
      tags:
        - Sticky Note
      description: ""
      summary: Creates a new sticky note for a customer
      parameters:
        - name: name
          in: body
          description: The NewStickyNote object
          required: true
          schema:
            $ref: "#/definitions/NewStickyNote"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/ExpandedStickyNote"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: Conflict
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      operationId: getStickyNotes
      tags:
        - Sticky Note
      description: ""
      summary: Returns all sticky notes for a customer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ExpandedStickyNote"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /sticky-notes/{stickyNoteId}:
    x-swagger-router-controller: stickyNotes
    parameters:
      - $ref: '#/parameters/stickyNoteId'
    get:
      operationId: getStickyNoteById
      tags:
        - Sticky Note
      description: ""
      summary: Returns a sticky note
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ExpandedStickyNote"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: updateStickyNote
      tags:
        - Sticky Note
      description: ""
      summary: Updates a sticky note
      parameters:
        - name: name
          in: body
          description: The StickyNote object
          required: true
          schema:
            $ref: "#/definitions/StickyNote"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ExpandedStickyNote"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: Conflict
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      operationId: partialUpdateStickyNote
      tags:
        - Sticky Note
      description: ""
      summary: Partially update a sticky note
      consumes:
        - application/merge-patch+json
      parameters:
        - name: stickyNoteUpdatePatch
          in: body
          description: The StickyNoteUpdatePatch object
          required: true
          schema:
            $ref: "#/definitions/StickyNoteUpdatePatch"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ExpandedStickyNote"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: Conflict
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: deleteStickyNote
      tags:
        - Sticky Note
      description: ""
      summary: Deletes a sticky note
      responses:
        204:
          description: No content
        404:
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw

################################################################################
#                                 Definitions                                  #
################################################################################
definitions:
  # Workflow status
  NewWorkflowStatus:
    type: object
    required:
      - name
      - color
    properties:
      name:
        type: string
      color:
        $ref: "#/definitions/Color"
      pos:
        $ref: "#/definitions/SortablePosition"
    # additionalProperties: false
  WorkflowStatus:
    type: object
    allOf:
      - $ref: "#/definitions/NewWorkflowStatus"
      - required:
        - _id
        - pos
        properties:
          _id:
            $ref: "#/definitions/ObjectId"
          pos:
            $ref: "#/definitions/SortablePosition"
  ExpandedWorkflowStatus:
    type: object
    allOf:
      - $ref: "#/definitions/WorkflowStatus"
      - required:
        - created_at
        - updated_at
        properties:
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
  WorkflowStatusUpdatePatch:
    type: object
    properties:
      name:
        type: string
      color:
        $ref: "#/definitions/Color"
      pos:
        $ref: "#/definitions/SortablePosition"
    additionalProperties: false

  # Customer
  NewCustomer:
    type: object
    required:
      - surname
      - given_name
      - gender
      - status
    properties:
      email:
        type: string
        format: email
      surname:
        type: string
      given_name:
        type: string
      nickname:
        type: string
      real_name:
        type: string
      gender:
        $ref: "#/definitions/Gender"
      birthday:
        type: string
        format: date-time
      mobile:
        type: string
      qq:
        type: string
      wechat:
        type: string
      au_address:
        type: string
      foreign_address:
        type: string
      visa_expiry_date:
        type: string
        format: date-time
      status:
        $ref: "#/definitions/ObjectId"
      list_pos:
        $ref: "#/definitions/SortablePosition"
      workflow_pos:
        $ref: "#/definitions/SortablePosition"
      is_archived:
        type: boolean
        default: false
    additionalProperties: false
  Customer:
    type: object
    allOf:
      - $ref: "#/definitions/NewCustomer"
      - required:
          - _id
          - list_pos
          - workflow_pos
          - is_archived
        properties:
          _id:
            $ref: "#/definitions/ObjectId"
          list_pos:
            $ref: "#/definitions/SortablePosition"
          workflow_pos:
            $ref: "#/definitions/SortablePosition"
          is_archived:
            type: boolean
  ExpandedCustomer:
    type: object
    required:
      - _id
      - surname
      - given_name
      - gender
      - status
      - list_pos
      - workflow_pos
      - is_archived
      - created_at
      - updated_at
    properties:
      _id:
        $ref: "#/definitions/ObjectId"
      email:
        type: string
        format: email
      surname:
        type: string
      given_name:
        type: string
      nickname:
        type: string
      real_name:
        type: string
      gender:
        $ref: "#/definitions/Gender"
      birthday:
        type: string
        format: date-time
      mobile:
        type: string
      qq:
        type: string
      wechat:
        type: string
      au_address:
        type: string
      foreign_address:
        type: string
      visa_expiry_date:
        type: string
        format: date-time
      status:
        $ref: "#/definitions/ExpandedWorkflowStatus"
      list_pos:
        $ref: "#/definitions/SortablePosition"
      workflow_pos:
        $ref: "#/definitions/SortablePosition"
      is_archived:
        type: boolean
      checklists:
        type: array
        items:
          $ref: "#/definitions/ExpandedChecklist"
      sticky_notes:
        type: array
        items:
          $ref: "#/definitions/StickyNote"
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  CustomerUpdatePatch:
    type: object
    properties:
      email:
        type: string
        format: email
      surname:
        type: string
      given_name:
        type: string
      nickname:
        type: string
      real_name:
        type: string
      gender:
        $ref: "#/definitions/Gender"
      birthday:
        type: string
        format: date-time
      mobile:
        type: string
      qq:
        type: string
      wechat:
        type: string
      au_address:
        type: string
      foreign_address:
        type: string
      visa_expiry_date:
        type: string
        format: date-time
      status:
        $ref: "#/definitions/ObjectId"
      list_pos:
        $ref: "#/definitions/SortablePosition"
      workflow_pos:
        $ref: "#/definitions/SortablePosition"
      is_archived:
        type: boolean
    additionalProperties: false

  # Checklist
  NewChecklist:
    type: object
    required:
      - name
    properties:
      name:
        type: string
      pos:
        $ref: "#/definitions/SortablePosition"
    additionalProperties: false
  Checklist:
    type: object
    allOf:
      - $ref: "#/definitions/NewChecklist"
      - required:
          - _id
          - pos
        properties:
          _id:
            $ref: "#/definitions/ObjectId"
          pos:
            $ref: "#/definitions/SortablePosition"
  ExpandedChecklist:
    type: object
    required:
      - _id
      - name
      - pos
      - created_at
      - updated_at
    properties:
      _id:
        $ref: "#/definitions/ObjectId"
      name:
        type: string
      pos:
        $ref: "#/definitions/SortablePosition"
      items:
        type: array
        items:
          $ref: "#/definitions/ExpandedChecklistItem"
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  ChecklistUpdatePatch:
    type: object
    properties:
      name:
        type: string
      pos:
        $ref: "#/definitions/SortablePosition"
    additionalProperties: false

  # Checklist item
  NewChecklistItem:
    type: object
    required:
      - text
    properties:
      text:
        type: string
      checked:
        type: boolean
        default: false
      pos:
        $ref: "#/definitions/SortablePosition"
    additionalProperties: false
  ChecklistItem:
    type: object
    allOf:
      - $ref: "#/definitions/NewChecklistItem"
      - required:
        - _id
        - checked
        - pos
        properties:
          _id:
            $ref: "#/definitions/ObjectId"
          checked:
            type: boolean
          pos:
            $ref: "#/definitions/SortablePosition"
  ExpandedChecklistItem:
    type: object
    allOf:
      - $ref: "#/definitions/ChecklistItem"
      - required:
        - created_at
        - updated_at
        properties:
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
  ChecklistItemUpdatePatch:
    type: object
    properties:
      text:
        type: string
      checked:
        type: boolean
      pos:
        $ref: "#/definitions/SortablePosition"
    additionalProperties: false

  # Sticky note
  NewStickyNote:
    type: object
    required:
      - text
    properties:
      text:
        type: string
      pos:
        $ref: "#/definitions/SortablePosition"
    # additionalProperties: false
  StickyNote:
    type: object
    allOf:
      - $ref: "#/definitions/NewStickyNote"
      - required:
        - _id
        - pos
        properties:
          _id:
            $ref: "#/definitions/ObjectId"
          pos:
            $ref: "#/definitions/SortablePosition"
  ExpandedStickyNote:
    type: object
    allOf:
      - $ref: "#/definitions/StickyNote"
      - required:
        - created_at
        - updated_at
        properties:
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
  StickyNoteUpdatePatch:
    type: object
    properties:
      text:
        type: string
      pos:
        $ref: "#/definitions/SortablePosition"
    additionalProperties: false

  # Internal types
  ObjectId:
    type: string
    pattern: ^[0-9a-fA-F]{24}$
  SortablePosition:
    type: integer
    format: int32
    minimum: 0

  # Enums
  Color:
    type: string
    enum:
      - red
      - orange
      - yellow
      - green
      - blue
      - purple
      - black
  Gender:
    type: string
    enum:
      - male
      - female

  # Responses
  ErrorResponse:
    type: object
    required:
      - statusCode
      - error
      - message
    properties:
      statusCode:
        type: integer
      error:
        type: string
      message:
        type: string
      details:
        type: array
        items:
          type: object